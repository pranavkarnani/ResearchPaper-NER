Proceedings O
of O
the O
1st O
Workshop O
on O
South O
and O
Southeast O
Asian O
Natural O
Language O
Processing O
(WSSANLP) O
, O
pages O
51–55, O
the O
23rd O
International O
Conference O
on O
Computational O
Linguistics O
(COLING) O
, O
Beijing, O
August O
2010 O
Hybrid B-TaskName
Stemmer I-TaskName
for I-TaskName
Gujarati I-TaskName
Pratikkumar O
Patel O
Kashyap O
P O
opat O
Department O
of O
Computer O
Eng O
ineering O
Dharmsinh O
Desai O
University O
pratikpat88 O
@gmail.com O
kan.pop@gmail.com O
Pushpak O
Bhattacharyya O
Department O
of O
Computer O
Science O
and O
Enginee O
ring O
Indian O
Institute O
of O
Technology O
Bombay O
pb@cse.iitb.ac.in O
Abstract O
In O
this O
paper O
we O
present O
a O
lightweight B-TaskName
stemmer I-TaskName
for I-TaskName
Gujarati I-TaskName
using O
a O
hybrid O
a O
p- O
proach. O
Instead O
of O
using O
a O
completely O
unsupervised O
approach, O
we O
have O
ha O
r- O
nessed O
linguistic O
knowledge O
in O
the O
form O
of O
a O
hand O
-crafted O
G O
ujarati O
suffix O
list O
in O
order O
to O
improve O
the O
quality O
of O
the O
stems O
and O
suffixes O
learnt O
during O
the O
training O
phase. O
We O
used O
the O
EMILLE B-DatasetName
corpus I-DatasetName
for O
training O
and O
evaluating O
the O
stemmer’s O
performance. O
The O
use O
of O
hand O
-crafted O
suffixes O
boosted O
the O
accuracy B-MetricName
of O
our O
stemmer O
by O
about O
17% B-MetricValue
and O
helped O
us O
achieve O
an O
accuracy O
of O
67.86 B-MetricValue
%. I-MetricValue
1 O
Introduction O
Stemming B-TaskName
is O
the O
process O
of O
conflating O
related O
words O
to O
a O
common O
stem O
by O
chopping O
off O
the O
inflectional O
and O
derivational O
endings. O
Stemming B-TaskName
plays O
an O
important O
role O
in O
Information O
Re O
trieval O
(IR) O
systems O
by O
r O
educing O
the O
index O
size O
and O
i O
n- O
creasing O
the O
recall O
by O
retrieving O
results O
contai O
n- O
ing O
any O
of O
the O
various O
possible O
forms O
of O
a O
word O
present O
in O
the O
query. O
This O
is O
especially O
true O
in O
case O
of O
a O
morphologically O
rich O
language O
like O
Gujarati, O
w O
here O
a O
single O
word O
may O
take O
many O
forms. O
The O
aim O
is O
to O
ensure O
that O
related O
words O
map O
to O
common O
stem, O
irrespective O
of O
whether O
or O
not O
the O
stem O
is O
a O
meaningful O
word O
in O
the O
voc O
a- O
bulary O
of O
the O
la O
nguage. O
Current O
state O
of O
the O
art O
approaches O
to O
stem- B-TaskName
ming I-TaskName
can O
be O
cla O
ssified O
into O
three O
categories O
, O
viz. O
, O
rule O
based, O
unsupervised O
and O
hybrid O
. O
Building O
a O
rule O
based O
stemmer O
for O
a O
morphologically O
rich O
language O
is O
an O
uphill O
task O
considering O
the O
di O
f- O
ferent O
inflectional O
and O
morphological O
variations O
possible. O
Purely O
unsupervised O
approaches O
on O
the O
other O
hand O
fail O
to O
take O
advantage O
of O
some O
la O
n- O
guage O
phenomenon O
which O
can O
be O
easily O
e O
x- O
pressed O
by O
simple O
rules. O
We O
thus O
follow O
a O
hyb O
r- O
id O
approach O
by O
enhanc O
ing O
an O
unsupervised O
sy O
s- O
tem O
with O
a O
list O
of O
hand O
-crafted O
Gu O
jarati O
suffixes O
. O
The O
remainder O
of O
this O
paper O
is O
organized O
as O
follows. O
We O
de O
scribe O
related O
work O
in O
section O
2. O
Section O
3 O
explains O
the O
morphological O
structure O
of O
Gujarati. O
We O
de O
scribe O
our O
approach O
in O
section O
4. O
The O
experiment O
s O
and O
results O
are O
described O
in O
section O
5. O
Section O
6 O
concludes O
th O
e O
paper O
hi O
g- O
hlighting O
the O
future O
work. O
2 O
Background O
and O
Related O
Work O
The O
earliest O
English O
stemmer O
was O
developed O
by O
Julie O
Beth O
Lovins O
in O
1968. O
The O
Porter O
stemming O
algorithm O
(Martin O
Porter, O
1980), O
which O
was O
published O
later, O
is O
perhaps O
the O
most O
widely O
used O
algor O
ithm O
for O
English O
stemming. O
Both O
of O
these O
stemmers O
are O
rule O
based O
and O
are O
best O
suited O
for O
less O
inflectional O
languages O
like O
English. O
A O
lot O
of O
work O
has O
been O
done O
in O
the O
field O
of O
unsupervised O
learning O
of O
morphology. O
Goldsmith O
(2001, O
2006) O
proposed O
an O
unsupe O
r- O
vised O
algorithm O
for O
learning O
the O
morphology O
of O
a O
language O
based O
on O
the O
min O
imum O
description O
length O
(MDL) O
framework O
which O
focuses O
on O
representing O
the O
data O
in O
as O
compact O
manner O
as O
possible. O
Creutz O
(2005 O
, O
2007 O
) O
uses O
probabilistic O
maximum O
a O
posteriori O
(MAP) O
formu O
lation O
for O
unsupervised O
morpheme O
segmentation. O
Not O
much O
work O
has O
been O
reported O
for O
ste B-TaskName
m- I-TaskName
ming I-TaskName
for O
Indian O
languages O
compared O
to O
English O
and O
other O
European O
languages. O
The O
ear O
liest O
work O
reported O
by O
Ramanathan O
and O
Rao O
(2003) O
used O
a O
hand O
crafted O
suffix O
list O
and O
p O
erformed O
longest O
match O
stripping O
for O
building O
a O
Hindi O
stemmer. O
Majumder O
et O
al. O
(2007) O
deve O
loped O
YASS: O
Yet O
Another O
Suffix O
Stripper O
which O
uses O
a O
clustering O
based O
approach O
based O
on O
string O
di O
s-51tance O
measures O
and O
requires O
no O
linguistic O
kno O
w- O
ledge. O
They O
concluded O
that O
stemming O
i O
mproves O
recall O
of O
IR O
systems O
for O
I O
ndian O
languages O
like O
Bengali. O
Dasgupta O
and O
Ng O
(2007) O
worked O
on O
unsupervised O
morphological O
parsing O
for O
Beng O
a- O
li. O
Pandey O
and O
Siddiqui O
(2008) O
proposed O
an O
u O
n- O
supervised O
stemming O
algorithm O
for O
Hindi O
based O
on O
Goldsm O
ith's O
(2001) O
a O
pproach. O
Unlike O
previous O
approaches O
for O
Indian O
la O
n- O
guages O
which O
are O
either O
rule O
based O
or O
complet O
e- O
ly O
unsupervised, O
we O
propose O
a O
hybrid O
approach O
which O
harnesses O
linguistic O
knowledge O
in O
the O
form O
of O
a O
hand O
-crafted O
suffix O
list. O
3 O
Gujarati O
Morphology O
Gujarati O
has O
three O
genders O
(masculine, O
neuter O
and O
feminine), O
two O
numbers O
(singular O
and O
plu O
r- O
al) O
and O
three O
cases O
(nominative, O
obl O
i- O
que/vocative O
and O
locative) O
for O
nouns. O
The O
gen O
d- O
er O
of O
a O
noun O
is O
determined O
either O
by O
its O
meaning O
or O
by O
its O
termination. O
The O
nouns O
get O
inflected O
on O
the O
basis O
of O
the O
word O
ending, O
number O
and O
case. O
The O
Gujarati O
adjectives O
are O
of O
two O
types O
– O
dec- O
linable O
and O
indeclinable. O
The O
declinable O
adje O
c- O
tives O
have O
the O
termination O
-ũ O
(◌ુ◌ં) O
in O
neuter O
a O
b- O
solute. O
The O
masculine O
absolute O
of O
these O
adje O
c- O
tives O
ends O
in O
-o O
(◌ો) O
and O
the O
feminine O
absolute O
in O
-ī O
(◌ી). O
For O
example, O
the O
adjective O
સાἘં O
(sārũ O
- O
good) O
takes O
the O
form O
સાἘં O
(sārũ), O
સારો O
(sāro) O
and O
સારી O
(sārī) O
when O
used O
for O
a O
neuter, O
mascul O
ine O
and O
feminine O
object O
respectively O
. O
These O
adje O
c- O
tives O
agree O
with O
the O
noun O
they O
qualify O
in O
gender, O
number O
and O
case. O
The O
adjec O
tives O
that O
do O
not O
end O
in O
-ũ O
in O
neuter O
absolute O
singular O
are O
classified O
as O
indeclinable O
and O
remain O
unaltered O
when O
affixed O
to O
a O
noun. O
The O
Gujarati O
verbs O
are O
inflected O
based O
upon O
a O
combination O
of O
gender, O
number, O
person, O
aspect, O
tense O
and O
mood. O
There O
are O
several O
postpositions O
in O
Gujarati O
which O
get O
bound O
to O
the O
nouns O
or O
verbs O
which O
they O
postposition. O
e.g. O
-nũ O
(નું O
: O
genitive O
marker), O
-mā̃ O
(માં O
: O
in), O
-e O
(◌ે O
: O
ergative O
marker), O
etc. O
These O
postpositions O
get O
aggl O
utinated O
to O
the O
nouns O
or O
verbs O
and O
not O
merely O
follow O
them. O
We O
created O
a O
list O
of O
hand O
crafted O
Gujarati O
su O
f- O
fixes O
which O
contains O
the O
postpositions O
and O
the O
inflectional O
suffixes O
for O
nouns, O
adjectives O
and O
verbs O
for O
use O
in O
our O
approach. O
4 O
Our O
Approach O
Our O
approach O
is O
based O
on O
Goldsmith's O
(2001) O
take-all-splits B-MethodName
method. O
Goldsmith's O
method O
was O
purely O
unsupervised, O
but O
we O
have O
used O
a O
list O
of O
hand O
crafted O
Gujarati O
suffixes O
in O
our O
approach O
to O
learn O
a O
better O
set O
of O
stems O
and O
suffixes O
during O
the O
training O
phase. O
In O
our O
approach, O
we O
make O
use O
of O
a O
list O
of O
Gujarati O
words O
extracted O
from O
EMILLE B-DatasetName
corpus O
for O
the O
purpose O
of O
learning O
the O
probable O
stems O
and O
suffixes O
for O
Gujarati O
du O
ring O
the O
training O
phase. O
This O
set O
o O
f O
stems O
and O
suffi O
x- O
es O
will O
be O
used O
for O
ste B-TaskName
mming I-TaskName
any O
word O
provided O
to O
the O
stemmer. O
We O
have O
described O
the O
details O
of O
our O
approach O
b O
elow. O
4.1 O
Training O
Phase O
During O
the O
training O
phase, O
we O
try O
to O
obtain O
the O
optimal O
split B-HyperparameterName
position O
for O
each O
word O
present O
in O
the O
Gujarat O
i O
word O
list O
provided O
for O
training. O
We O
obtain O
the O
optimal O
split B-HyperparameterName
for O
any O
word O
by O
taking O
all O
possible O
splits B-HyperparameterName
of O
the O
word O
( O
see O
Figure O
1) O
and O
choosing O
the O
split B-HyperparameterName
which O
maximizes O
the O
function O
given O
in O
Eqn O
1 O
as O
the O
optimal O
split B-HyperparameterName
position. O
The O
suffix O
corresponding O
to O
the O
optimal O
split B-HyperparameterName
position O
is O
verified O
against O
the O
list O
of O
59 O
Gujarati O
suffixes O
created O
by O
us. O
If O
it O
cannot O
be O
generated O
by O
agglutination O
of O
the O
hand O
crafted O
suffixes, O
then O
the O
length O
of O
the O
word O
is O
chosen O
as O
the O
optimal O
split B-HyperparameterName
position. O
i.e. O
the O
entire O
word O
is O
treated O
as O
a O
stem O
with O
no O
suffix. O
The O
function O
used O
for O
finding O
the O
optimal O
split B-HyperparameterName
position O
reflects O
the O
probability O
of O
a O
parti O
c- O
ular O
split O
since O
the O
probability O
o O
f O
any O
split O
is O
determined O
by O
the O
frequencies O
of O
the O
stem B-HyperparameterName
and O
suffix B-HyperparameterName
generated O
by O
that O
split. B-HyperparameterName
The O
frequency O
of O
shorter O
stems B-HyperparameterName
and O
suffixes B-HyperparameterName
is O
very O
high O
when O
compared O
to O
the O
slightly O
longer O
ones. O
Thus O
the O
multipliers O
i O
(length O
of O
stem O
i) O
and O
L-i O
(length O
of O
suffixi) O
have O
been O
introduced O
in O
the O
function O
in O
order O
to O
compensate O
for O
this O
disparity. O
f(i) O
= O
i*log(freq(stem B-HyperparameterName
i)) O
+ O
(L O
-i)*log(freq(suffix B-HyperparameterName
i)) O
(Eqn O
1) O
i: O
split O
position O
(varies O
from O
1 O
to O
L) O
L: O
Length O
of O
the O
word O
Once O
we O
obtain O
the O
optimal O
split B-HyperparameterName
of O
any O
word, O
we O
update O
the O
frequencies O
of O
the O
stem B-HyperparameterName
and O
suffix B-HyperparameterName
generated O
by O
that O
split. B-HyperparameterName
We O
iterate O
over O
the O
word O
list O
and O
re O
-compute O
the O
o O
ptimal O
split B-HyperparameterName
position O
until O
the O
optimal O
split B-HyperparameterName
positions O
of O
all O
the O
words O
remain O
unchanged. O
The O
training O
phase O
was O
o O
b- O
served O
to O
take O
three O
iterations O
typically. O
4.2 O
Signatures O
After O
the O
training O
phase, O
we O
have O
a O
list O
of O
stems B-HyperparameterName
and O
suffixes B-HyperparameterName
along O
with O
their O
freque O
ncies. O
We O
use O
this O
list O
to O
create O
signatures O
. O
As O
shown O
in O
Figure O
2 O
, O
each O
signature O
contains O
a O
list O
of O
stems B-HyperparameterName
and O
a O
list O
of O
suffixes B-HyperparameterName
appearing O
with O
these O
stems B-HyperparameterName
. O
The O
signatures O
which O
contain O
very O
few O
stems B-HyperparameterName
or O
very O
few O
suffixes B-HyperparameterName
may O
not O
be O
useful O
in O
ste B-TaskName
m- I-TaskName
ming I-TaskName
of O
unknown O
words, O
thus O
we O
eliminate O
the O
signatu O
res O
contai O
ning O
at O
most O
one O
stem B-HyperparameterName
or O
at O
most O
one O
suffix. B-HyperparameterName
The O
stems B-HyperparameterName
and O
suffi B-HyperparameterName
xes I-HyperparameterName
in O
the O
remaining O
signatures O
will O
be O
used O
to O
stem O
new O
word O
s. O
An O
overview O
of O
the O
training O
alg O
orithm O
is O
shown O
in O
Figure O
3. O
4.3 O
Stemming B-TaskName
of O
any O
unknown O
word O
For O
stemming B-TaskName
of O
any O
word O
given O
to O
the O
stemmer, O
we O
evaluate O
the O
function O
in O
Eqn O
1 O
for O
each O
pos O
s-ible O
split O
using O
the O
frequencies O
of O
stems B-HyperparameterName
and O
su B-HyperparameterName
f- I-HyperparameterName
fixes I-HyperparameterName
obtained O
from O
the O
training O
process. O
The O
word O
is O
stemmed O
at O
the O
position O
for O
which O
the O
value O
of O
the O
functio O
n O
is O
maximum. O
5 O
Experiment O
s O
and O
Result O
We O
performed O
various O
experiments O
to O
evaluate O
the O
performance O
of O
the O
stemmer O
using O
EMILLE B-DatasetName
Corpus O
for O
Gujarati. O
We O
extracted O
around O
ten O
million O
words O
from O
the O
corpus. O
These O
words O
also O
contained O
Gujarati O
transliterations O
of O
En O
g- O
lish O
words. O
We O
tried O
to O
filter O
out O
these O
words O
by O
using O
a O
Gujarati O
to O
English O
transliteration O
engine O
and O
an O
English O
dictionary. O
We O
obtained O
8,525,649 O
words O
after O
this O
filtering O
process O
. O
We O
have O
used O
five O
-fold O
cross O
validation O
for O
evaluating O
the O
perfo O
rmance. O
We O
divided O
the O
e O
x- O
tracted O
words O
into O
five O
equal O
parts O
of O
which O
four O
were O
used O
for O
training O
and O
one O
for O
testing. O
In O
order O
to O
create O
gold O
standard O
data, O
we O
extracted O
thousand O
words O
from O
the O
corpus O
randomly O
and O
tagged O
the O
ideal O
stem B-HyperparameterName
for O
these O
words O
man O
ually. O
For O
each O
of O
the O
five O
test O
sets, O
we O
measured O
the O
accuracy B-MetricName
of O
stemming O
the O
words O
which O
are O
present O
in O
the O
test O
set O
as O
well O
as O
gold O
standard O
data. O
Accuracy B-MetricName
is O
defined O
as O
the O
percentage O
of O
words O
stemmed O
correctly. O
The O
experiments O
were O
aimed O
at O
studying O
the O
impact O
of O
(i) O
using O
a O
hand O
-crafted O
suffix B-HyperparameterName
list, O
(ii) O
fixing O
the O
minimum O
permissible O
stem B-HyperparameterName
size I-HyperparameterName
and O
(iii) O
provide O
unequal O
weightage O
to O
the O
stem B-HyperparameterName
and O
suffix B-HyperparameterName
for O
deciding O
the O
optimal O
split B-HyperparameterName
position. O
Various O
results O
based O
on O
these O
experiments O
are O
described O
in O
the O
following O
subsections. O
5.1 O
Varying O
Minimum B-HyperparameterName
Stem I-HyperparameterName
Size I-HyperparameterName
We O
varied O
the O
minimum B-HyperparameterName
stem I-HyperparameterName
size I-HyperparameterName
from O
one O
to O
six O
and O
observed O
its O
impact O
on O
the O
system O
pe O
r- O
formance O
. O
We O
performed O
the O
experiment O
with O
and O
without O
using O
the O
hand O
-crafted O
suffix B-HyperparameterName
list. O
The O
results O
of O
this O
experiment O
are O
shown O
in O
T O
a- O
ble O
1 O
and O
Figure O
4 O
. O
The O
results O
of O
this O
experiment O
clearly O
indicate O
that O
there O
is O
a O
large O
improvement O
in O
the O
perfo O
r- O
mance O
of O
the O
stemmer O
with O
the O
use O
of O
hand O
- O
crafted O
suffixes B-HyperparameterName
and O
the O
performance O
degrades O
if O
we O
keep O
a O
restriction O
o O
n O
the O
minimum B-HyperparameterName
stem I-HyperparameterName
size. I-HyperparameterName
For O
higher O
values O
of O
min B-HyperparameterName
imum I-HyperparameterName
stem I-HyperparameterName
size, I-HyperparameterName
all O
the O
valid O
stems B-HyperparameterName
which O
are O
shorter O
than O
the O
minimum O
stem O
size O
do O
not O
get O
generated O
leading O
to O
a O
d O
e- O
cline O
in O
accuracy. O
There O
are O
several O
spurious O
suffixes B-HyperparameterName
which O
get O
generated O
during O
the O
training O
phase O
and O
degrade O
the O
performance O
of O
the O
stemmer O
when O
we O
don’t O
use O
the O
hand O
-crafted O
suffix B-HyperparameterName
list. O
e.g. O
‘ O
ક’ O
is O
not O
a O
valid O
inflectional O
Gujarati O
suffix B-HyperparameterName
but O
it O
does O
get O
generated O
if O
we O
don’t O
use O
the O
hand O
-crafted O
su B-HyperparameterName
f- I-HyperparameterName
fix I-HyperparameterName
list O
due O
to O
words O
such O
as O
‘ O
અનેક’ O
(anek O
- O
many) O
and O
‘અને’ O
(ane O
- O
and). O
A O
simple O
validation O
of O
the O
suffixes B-HyperparameterName
generated O
d O
uring O
training O
against O
the O
hand O
-crafted O
suffix B-HyperparameterName
list O
leads O
to O
learning O
of O
be O
t- O
ter O
suffixes B-HyperparameterName
and O
in O
turn O
better O
stems B-HyperparameterName
during O
the O
training O
phase O
thereby O
improving O
the O
system O
’s O
performance. O
Thus O
we O
decided O
to O
make O
use O
of O
the O
hand O
- O
crafted O
suffix B-HyperparameterName
list O
during O
train O
ing O
phase O
and O
not O
to O
put O
any O
restriction O
on O
the O
minimum B-HyperparameterName
stem I-HyperparameterName
size. I-HyperparameterName
5.2 O
Providing O
unequal O
weightage O
to O
stem B-HyperparameterName
and O
suffix B-HyperparameterName
We O
have O
provided O
equal O
weightage O
to O
stem B-HyperparameterName
and O
suffix B-HyperparameterName
in O
Eqn O
1 O
which O
is O
responsible O
for O
dete O
r- O
mining O
the O
optimal O
split O
position O
of O
any O
word O
. O
We O
obtained O
Eqn O
2 O
from O
Eqn O
1 O
by O
introducing O
a O
parameter O
‘ O
α’ B-HyperparameterName
in O
order O
to O
provide O
unequal O
weightage O
to O
the O
stem O
and O
suffix O
and O
observe O
its O
effect O
on O
system O
performance. O
We O
used O
Eqn O
2 O
instead O
of O
Eqn O
1 O
and O
varied O
α B-HyperparameterName
from O
0.1 B-HyperparameterValue
to O
0.9 B-HyperparameterValue
in O
this O
experiment. O
The O
results O
o O
f O
this O
experiment O
are O
shown O
in O
Table O
2. O
The O
accuracy B-MetricName
was O
found O
to O
be O
maximum O
when O
value O
of O
α B-HyperparameterName
was O
fixed O
to O
0.5 B-HyperparameterValue
i.e. O
stem B-HyperparameterName
and O
suffix B-HyperparameterName
were O
given O
equal O
weightage O
for O
determi O
n- O
ing O
the O
optimal O
split O
of O
any O
word. O
6 O
Conclusion O
and O
Future O
Work O
We O
developed O
a O
light B-TaskName
weight I-TaskName
stemmer I-TaskName
for I-TaskName
Guj I-TaskName
a- I-TaskName
rati I-TaskName
using O
a O
hybrid O
approach O
which O
has O
an O
acc B-MetricName
u- I-MetricName
racy I-MetricName
of O
67.86 B-MetricValue
%. I-MetricValue
We O
observed O
that O
use O
of O
a O
hand O
-crafted O
Gujarati O
suffix O
list O
boosts O
the O
acc B-MetricName
u- I-MetricName
racy I-MetricName
by O
about O
17 B-MetricValue
%. I-MetricValue
We O
also O
found O
that O
fixing O
the O
minimum B-HyperparameterName
stem I-HyperparameterName
size I-HyperparameterName
and O
providing O
unequal B-HyperparameterName
weightage I-HyperparameterName
to O
stem B-HyperparameterName
and O
suffix B-HyperparameterName
degrades O
the O
pe O
r- O
formance O
of O
the O
system. O
Our O
stemmer O
is O
lightweight O
and O
removes O
only O
the O
inflectional O
endings O
as O
we O
have O
developed O
it O
for O
use O
in O
IR O
system. O
The O
list O
of O
hand O
-crafted O
suffixes B-HyperparameterName
can O
be O
extended O
to O
include O
derivational O
suffixes B-HyperparameterName
for O
pe O
rforming O
full O
fledged O
stemming B-TaskName
which O
may O
be O
required O
in O
applications O
such O
as O
displaying O
words O
in O
a O
user O
interface. O
We O
have O
measured O
the O
performance O
of O
the O
stemmer O
in O
terms O
of O
accuracy B-MetricName
as O
of O
now. O
We O
plan O
to O
evaluate O
the O
stemmer O
in O
terms O
of O
the O
i O
n- O
dex O
compression O
achieved O
and O
the O
impact O
on O
precision O
and O
recall O
of O
G O
ujarati O
IR O
system. O
f(i) O
= O
α O
* O
i O
* O
log(freq(stem O
i)) O
+ O
(1-α) O
* O
(L O
-i) O
* O
log(freq(suffix O
i)) O
(Eqn O
2) O
54 O